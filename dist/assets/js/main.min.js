"use strict";var homeAnimation=function(){setTimeout(function(){for(var e=1;e<=74;e++){var t=document.querySelector(".bar"+e),a=document.querySelector(".contBar"+e),r=5*e,n=e*Math.random()*.2;a.style.transform="rotate("+r+"deg) translateY(300px) ",t.style.animation="bar 2s infinite  "+n+"s cubic-bezier(.17,.67,.24,.99)"}}(),1e3);var a=function(e){var t=document.createElement("div"),a=document.createElement("p"),r=document.createElement("div"),n=document.createElement("div");t.classList.add("infoCadre"),r.classList.add("linkR"),n.classList.add("linkSFlat1"),n.classList.add("linkR");var s=void 0,o=void 0;switch(e){case"1":r.classList.add("linkRFlat"),t.classList.add("infoCadre1"),s=document.querySelector(".bar23"),t.style.transform="rotate(-115deg) translateY(-300px)",o=5;break;case"2":r.classList.add("linkRFlat2"),t.classList.add("infoCadre2"),s=document.querySelector(".bar60"),t.style.transform="rotate(-300deg) translateY(-300px)",o=1;break;case"3":r.classList.add("linkRFlat3"),t.classList.add("infoCadre3"),s=document.querySelector(".bar10"),t.style.transform="rotate(-50deg) translateY(-300px)",o=2}var i=document.querySelector(".randomQuote"+o).innerHTML;a.innerHTML=i,s.appendChild(t),t.appendChild(a),t.appendChild(r),a.style.animation="textAppear 0.4s ease-in-out forwards 0.8s",r.style.animation="lineAppear 0.4s ease-in-out forwards 0.4s",s.style.animation="donutSelect 0.4s ease-in-out forwards",setTimeout(function(){r.style.opacity=1,a.style.animation="textDisappear 0.4s ease-in-out forwards ",r.style.animation="lineDisappear 0.4s ease-in-out forwards 0.4s",setTimeout(function(){switch(e){case"1":document.querySelector(".bar23").style.height="70px",document.querySelector(".bar23").style.animation="donutDeselect 0.4s ease-in-out forwards 0.8s";break;case"2":document.querySelector(".bar60").style.height="70px",document.querySelector(".bar60").style.animation="donutDeselect 0.4s ease-in-out forwards 0.8s";break;case"3":document.querySelector(".bar10").style.height="70px",document.querySelector(".bar10").style.animation="donutDeselect 0.4s ease-in-out forwards 0.8s"}},900)},5e3)};!function e(){a("1");var t=1;setInterval(function(){if(t<=3){t++;var e=String(t);a(e)}},6e3),3==t&&(parentCadre.removeElement(infoCadre),infoCadre.removeElement(pCadre),infoCadre.removeElement(flatLink),setTimeout(e(),6e3))}();for(var e=document.querySelectorAll(".item"),t=[],r=0;r<e.length;r++){var n=e[r],s=-9*r;10<r&&r<32&&(document.querySelector(".name"+r).style.transform="rotate(-180deg)",document.querySelector(".name"+r).style.textAlign="left"),n.style.transform="rotate("+s+"deg) translateX(-300px) ",t.push(360+s)}for(var o=document.querySelectorAll(".name"),i=function(n){o[n].addEventListener("mouseenter",function(){o[n].style.fontWeight="900";var e=document.querySelector(".dot"+n);e.setAttribute("r",4),o[n].style.transition="all 0.2s",e.style.transition="all 0.2s";for(var t=document.querySelectorAll(".curve"+n),a=0;a<t.length;a++){t[a].classList.remove("animOut"),t[a].classList.add("anim");var r=t[a].dataset.id;document.querySelector("."+r).style.fontWeight="900",document.querySelector("."+r).style.transition="all 2s"}}),o[n].addEventListener("mouseout",function(){o[n].style.fontWeight="100";var e=document.querySelector(".dot"+n);e.style.fill="white",e.setAttribute("r",0),e.style.transition="all 0.2s",o[n].style.transition="all 0.2s";for(var t=document.querySelectorAll(".curve"+n),a=0;a<t.length;a++){t[a].classList.remove("anim"),t[a].classList.add("animOut");var r=t[a].dataset.id;document.querySelector("."+r).style.fontWeight="100"}})},l=0;l<o.length;l++)i(l)},heroesAnimation=function(){document.querySelector("appearanceBack")};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
